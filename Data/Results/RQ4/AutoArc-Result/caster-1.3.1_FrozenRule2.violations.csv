1,no classes that are public should depend on classes that reside in a package '..loader..',"Class <org.exolab.castor.jdo.engine.JDOMappingLoader> extends class <org.exolab.castor.mapping.loader.AbstractMappingLoader>",JDOMappingLoader.java,MEDIUM
2,no classes that are public should depend on classes that reside in a package '..loader..',"Class <org.exolab.castor.mapping.ExtendedFieldHandler> extends class <org.exolab.castor.mapping.loader.FieldHandlerFriend>",ExtendedFieldHandler.java,MEDIUM
3,no classes that are public should depend on classes that reside in a package '..loader..',"Class <org.exolab.castor.mapping.loader.AbstractMappingLoader> extends class <org.exolab.castor.mapping.loader.AbstractMappingLoader2>",AbstractMappingLoader.java,MEDIUM
4,no classes that are public should depend on classes that reside in a package '..loader..',"Class <org.exolab.castor.xml.XMLMappingLoader> extends class <org.exolab.castor.mapping.loader.AbstractMappingLoader>",XMLMappingLoader.java,MEDIUM
5,no classes that are public should depend on classes that reside in a package '..loader..',"Class <org.exolab.castor.xml.util.XMLFieldDescriptorImpl> extends class <org.exolab.castor.mapping.loader.FieldDescriptorImpl>",XMLFieldDescriptorImpl.java,MEDIUM
6,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.JDOMappingLoader.<init>(java.lang.ClassLoader)> calls constructor <org.exolab.castor.mapping.loader.AbstractMappingLoader.<init>(java.lang.ClassLoader)>",JDOMappingLoader.java,MEDIUM
7,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLEngine.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.PersistenceFactory)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",SQLEngine.java,MEDIUM
8,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLEngine.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.PersistenceFactory)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",SQLEngine.java,MEDIUM
9,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLEngine.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.PersistenceFactory)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertFrom()>",SQLEngine.java,MEDIUM
10,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLEngine.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.PersistenceFactory)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertTo()>",SQLEngine.java,MEDIUM
11,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLFieldInfo.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.mapping.FieldDescriptor, java.lang.String, boolean)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",SQLFieldInfo.java,MEDIUM
12,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLFieldInfo.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.mapping.FieldDescriptor, java.lang.String, boolean)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",SQLFieldInfo.java,MEDIUM
13,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLFieldInfo.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.mapping.FieldDescriptor, java.lang.String, boolean)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertFrom()>",SQLFieldInfo.java,MEDIUM
14,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLFieldInfo.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.mapping.FieldDescriptor, java.lang.String, boolean)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertFrom()>",SQLFieldInfo.java,MEDIUM
15,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLFieldInfo.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.mapping.FieldDescriptor, java.lang.String, boolean)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertTo()>",SQLFieldInfo.java,MEDIUM
16,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLFieldInfo.<init>(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.mapping.FieldDescriptor, java.lang.String, boolean)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertTo()>",SQLFieldInfo.java,MEDIUM
17,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLQuery.<init>(org.exolab.castor.jdo.engine.SQLEngine, org.exolab.castor.persist.spi.PersistenceFactory, java.lang.String, [Ljava.lang.Class;, boolean)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",SQLQuery.java,MEDIUM
18,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.engine.SQLQuery.<init>(org.exolab.castor.jdo.engine.SQLEngine, org.exolab.castor.persist.spi.PersistenceFactory, java.lang.String, [Ljava.lang.Class;, boolean)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",SQLQuery.java,MEDIUM
19,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.oql.ParamInfo.<init>(java.lang.String, java.lang.String, org.exolab.castor.mapping.FieldDescriptor, java.lang.ClassLoader)> calls method <org.exolab.castor.mapping.loader.Types.typeFromName(java.lang.ClassLoader, java.lang.String)>",ParamInfo.java,MEDIUM
20,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.jdo.oql.ParamInfo.<init>(java.lang.String, java.lang.String, org.exolab.castor.mapping.FieldDescriptor, java.lang.ClassLoader)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",ParamInfo.java,MEDIUM
21,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.ExtendedFieldHandler.<init>()> calls constructor <org.exolab.castor.mapping.loader.FieldHandlerFriend.<init>()>",ExtendedFieldHandler.java,MEDIUM
22,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.<init>(org.exolab.castor.mapping.loader.AbstractMappingLoader)> has parameter of type <org.exolab.castor.mapping.loader.AbstractMappingLoader>",AbstractMappingLoader.java,MEDIUM
23,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.AbstractMappingLoader.<init>(java.lang.ClassLoader)> calls constructor <org.exolab.castor.mapping.loader.AbstractMappingLoader2.<init>(java.lang.ClassLoader)>",AbstractMappingLoader.java,MEDIUM
24,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>(java.lang.String, org.exolab.castor.mapping.loader.TypeInfo, org.exolab.castor.mapping.FieldHandler, boolean)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getCollectionHandler()>",FieldDescriptorImpl.java,MEDIUM
25,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>(java.lang.String, org.exolab.castor.mapping.loader.TypeInfo, org.exolab.castor.mapping.FieldHandler, boolean)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getFieldType()>",FieldDescriptorImpl.java,MEDIUM
26,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>(java.lang.String, org.exolab.castor.mapping.loader.TypeInfo, org.exolab.castor.mapping.FieldHandler, boolean)> calls method <org.exolab.castor.mapping.loader.TypeInfo.isImmutable()>",FieldDescriptorImpl.java,MEDIUM
27,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>(java.lang.String, org.exolab.castor.mapping.loader.TypeInfo, org.exolab.castor.mapping.FieldHandler, boolean)> calls method <org.exolab.castor.mapping.loader.TypeInfo.isRequired()>",FieldDescriptorImpl.java,MEDIUM
28,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>(java.lang.String, org.exolab.castor.mapping.loader.TypeInfo, org.exolab.castor.mapping.FieldHandler, boolean)> has parameter of type <org.exolab.castor.mapping.loader.TypeInfo>",FieldDescriptorImpl.java,MEDIUM
29,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getCollectionHandler()>",FieldHandlerImpl.java,MEDIUM
30,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getConvertorFrom()>",FieldHandlerImpl.java,MEDIUM
31,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getConvertorTo()>",FieldHandlerImpl.java,MEDIUM
32,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getDefaultValue()>",FieldHandlerImpl.java,MEDIUM
33,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getFieldType()>",FieldHandlerImpl.java,MEDIUM
34,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getFieldType()>",FieldHandlerImpl.java,MEDIUM
35,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.isImmutable()>",FieldHandlerImpl.java,MEDIUM
36,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldHandlerImpl.java,MEDIUM
37,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)> has parameter of type <org.exolab.castor.mapping.loader.TypeInfo>",FieldHandlerImpl.java,MEDIUM
38,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getCollectionHandler()>",FieldHandlerImpl.java,MEDIUM
39,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getConvertorFrom()>",FieldHandlerImpl.java,MEDIUM
40,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getConvertorTo()>",FieldHandlerImpl.java,MEDIUM
41,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getDefaultValue()>",FieldHandlerImpl.java,MEDIUM
42,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getFieldType()>",FieldHandlerImpl.java,MEDIUM
43,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.isImmutable()>",FieldHandlerImpl.java,MEDIUM
44,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldHandlerImpl.java,MEDIUM
45,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)> has parameter of type <org.exolab.castor.mapping.loader.TypeInfo>",FieldHandlerImpl.java,MEDIUM
46,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getCollectionHandler()>",FieldHandlerImpl.java,MEDIUM
47,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getConvertorFrom()>",FieldHandlerImpl.java,MEDIUM
48,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getConvertorTo()>",FieldHandlerImpl.java,MEDIUM
49,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getDefaultValue()>",FieldHandlerImpl.java,MEDIUM
50,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getFieldType()>",FieldHandlerImpl.java,MEDIUM
51,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.TypeInfo.isImmutable()>",FieldHandlerImpl.java,MEDIUM
52,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldHandlerImpl.java,MEDIUM
53,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)> has parameter of type <org.exolab.castor.mapping.loader.TypeInfo>",FieldHandlerImpl.java,MEDIUM
54,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class, org.exolab.castor.mapping.TypeConvertor, org.exolab.castor.mapping.TypeConvertor, boolean, java.lang.Object, org.exolab.castor.mapping.CollectionHandler, boolean)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",TypeInfo.java,MEDIUM
55,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class, org.exolab.castor.mapping.TypeConvertor, org.exolab.castor.mapping.TypeConvertor, boolean, java.lang.Object, org.exolab.castor.mapping.CollectionHandler, boolean)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",TypeInfo.java,MEDIUM
56,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class, org.exolab.castor.mapping.TypeConvertor, org.exolab.castor.mapping.TypeConvertor, boolean, java.lang.Object, org.exolab.castor.mapping.CollectionHandler, boolean)> calls method <org.exolab.castor.mapping.loader.Types.getDefault(java.lang.Class)>",TypeInfo.java,MEDIUM
57,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class, org.exolab.castor.mapping.TypeConvertor, org.exolab.castor.mapping.TypeConvertor, boolean, java.lang.Object, org.exolab.castor.mapping.CollectionHandler, boolean)> calls method <org.exolab.castor.mapping.loader.Types.isImmutable(java.lang.Class)>",TypeInfo.java,MEDIUM
58,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.ClassMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.persist.LockEngine, org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.Persistence)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",ClassMolder.java,MEDIUM
59,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.ClassMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.persist.LockEngine, org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.Persistence)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",ClassMolder.java,MEDIUM
60,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.ClassMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.persist.LockEngine, org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.Persistence)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getMapping()>",ClassMolder.java,MEDIUM
61,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.ClassMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.persist.LockEngine, org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.Persistence)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertFrom()>",ClassMolder.java,MEDIUM
62,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.ClassMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.persist.LockEngine, org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.Persistence)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertFrom()>",ClassMolder.java,MEDIUM
63,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.ClassMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.persist.LockEngine, org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.Persistence)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertTo()>",ClassMolder.java,MEDIUM
64,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.ClassMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.persist.LockEngine, org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.persist.spi.Persistence)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getConvertTo()>",ClassMolder.java,MEDIUM
65,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.FieldMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.persist.ClassMolder, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.Types.getDefault(java.lang.Class)>",FieldMolder.java,MEDIUM
66,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.FieldMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.persist.ClassMolder, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.Types.isSimpleType(java.lang.Class)>",FieldMolder.java,MEDIUM
67,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.persist.FieldMolder.<init>(org.exolab.castor.persist.DatingService, org.exolab.castor.persist.ClassMolder, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.Types.typeFromName(java.lang.ClassLoader, java.lang.String)>",FieldMolder.java,MEDIUM
68,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.xml.XMLMappingLoader.<init>(java.lang.ClassLoader)> calls constructor <org.exolab.castor.mapping.loader.AbstractMappingLoader.<init>(java.lang.ClassLoader)>",XMLMappingLoader.java,MEDIUM
69,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.xml.util.XMLFieldDescriptorImpl.<init>(java.lang.Class, java.lang.String, java.lang.String, org.exolab.castor.xml.NodeType)> calls constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>()>",XMLFieldDescriptorImpl.java,MEDIUM
70,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.xml.util.XMLFieldDescriptorImpl.<init>(org.exolab.castor.mapping.FieldDescriptor, java.lang.String, org.exolab.castor.xml.NodeType, org.exolab.castor.xml.NodeType)> calls constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>()>",XMLFieldDescriptorImpl.java,MEDIUM
71,no classes that are public should depend on classes that reside in a package '..loader..',"Constructor <org.exolab.castor.xml.util.XMLFieldDescriptorImpl.<init>(org.exolab.castor.mapping.FieldDescriptor, java.lang.String, org.exolab.castor.xml.NodeType, org.exolab.castor.xml.NodeType)> checks instanceof <org.exolab.castor.mapping.loader.FieldHandlerImpl>",XMLFieldDescriptorImpl.java,MEDIUM
72,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.castor.cpa.util.classresolution.command.ClassResolutionByAnnotations._loopCache> has generic type <java.util.Map<java.lang.Class<?>, org.exolab.castor.mapping.loader.ClassDescriptorImpl>> with type argument depending on <org.exolab.castor.mapping.loader.ClassDescriptorImpl>",ClassResolutionByAnnotations.java,MEDIUM
73,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.this$0> has type <org.exolab.castor.mapping.loader.AbstractMappingLoader>",AbstractMappingLoader.java,MEDIUM
74,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo> has type <org.exolab.castor.mapping.loader.TypeInfo>",AbstractMappingLoader.java,MEDIUM
75,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.CollectionHandlers._info> depends on component type <org.exolab.castor.mapping.loader.CollectionHandlers$Info>",CollectionHandlers.java,MEDIUM
76,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.CollectionHandlers._info> has type <[Lorg.exolab.castor.mapping.loader.CollectionHandlers$Info;>",CollectionHandlers.java,MEDIUM
77,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.J1CollectionHandlers._colHandlers> depends on component type <org.exolab.castor.mapping.loader.CollectionHandlers$Info>",J1CollectionHandlers.java,MEDIUM
78,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.J1CollectionHandlers._colHandlers> has type <[Lorg.exolab.castor.mapping.loader.CollectionHandlers$Info;>",J1CollectionHandlers.java,MEDIUM
79,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.J2CollectionHandlers._colHandlers> depends on component type <org.exolab.castor.mapping.loader.CollectionHandlers$Info>",J2CollectionHandlers.java,MEDIUM
80,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.J2CollectionHandlers._colHandlers> has type <[Lorg.exolab.castor.mapping.loader.CollectionHandlers$Info;>",J2CollectionHandlers.java,MEDIUM
81,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.Types._typeInfos> depends on component type <org.exolab.castor.mapping.loader.Types$TypeInfo>",Types.java,MEDIUM
82,no classes that are public should depend on classes that reside in a package '..loader..',"Field <org.exolab.castor.mapping.loader.Types._typeInfos> has type <[Lorg.exolab.castor.mapping.loader.Types$TypeInfo;>",Types.java,MEDIUM
83,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.cpa.util.classresolution.command.ClassResolutionByAnnotations.resolve(java.lang.Class)> calls constructor <org.exolab.castor.mapping.loader.ClassDescriptorImpl.<init>()>",ClassResolutionByAnnotations.java,MEDIUM
84,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.addNature(java.lang.String)>",InfoToDescriptorConverter.java,MEDIUM
85,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setDepends(org.exolab.castor.mapping.ClassDescriptor)>",InfoToDescriptorConverter.java,MEDIUM
86,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setExtends(org.exolab.castor.mapping.ClassDescriptor)>",InfoToDescriptorConverter.java,MEDIUM
87,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setExtends(org.exolab.castor.mapping.ClassDescriptor)>",InfoToDescriptorConverter.java,MEDIUM
88,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setFields([Lorg.exolab.castor.mapping.FieldDescriptor;)>",InfoToDescriptorConverter.java,MEDIUM
89,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setIdentities([Lorg.exolab.castor.mapping.FieldDescriptor;)>",InfoToDescriptorConverter.java,MEDIUM
90,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setJavaClass(java.lang.Class)>",InfoToDescriptorConverter.java,MEDIUM
91,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setMapping(org.exolab.castor.mapping.xml.ClassMapping)>",InfoToDescriptorConverter.java,MEDIUM
92,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.Types.isConstructable(java.lang.Class, boolean)>",InfoToDescriptorConverter.java,MEDIUM
93,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.castor.jdo.jpa.info.ClassInfo, org.exolab.castor.xml.ClassDescriptorResolver, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> has parameter of type <org.exolab.castor.mapping.loader.ClassDescriptorImpl>",InfoToDescriptorConverter.java,MEDIUM
94,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>(java.lang.String, org.exolab.castor.mapping.loader.TypeInfo, org.exolab.castor.mapping.FieldHandler, boolean)>",InfoToDescriptorConverter.java,MEDIUM
95,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getMapping()>",InfoToDescriptorConverter.java,MEDIUM
96,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.addNature(java.lang.String)>",InfoToDescriptorConverter.java,MEDIUM
97,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.getClassDescriptor()>",InfoToDescriptorConverter.java,MEDIUM
98,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.getClassDescriptor()>",InfoToDescriptorConverter.java,MEDIUM
99,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.getClassDescriptor()>",InfoToDescriptorConverter.java,MEDIUM
100,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.isIdentity()>",InfoToDescriptorConverter.java,MEDIUM
101,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.isRequired()>",InfoToDescriptorConverter.java,MEDIUM
102,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setClassDescriptor(org.exolab.castor.mapping.ClassDescriptor)>",InfoToDescriptorConverter.java,MEDIUM
103,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setContainingClassDescriptor(org.exolab.castor.mapping.ClassDescriptor)>",InfoToDescriptorConverter.java,MEDIUM
104,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setFieldType(java.lang.Class)>",InfoToDescriptorConverter.java,MEDIUM
105,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setIdentity(boolean)>",InfoToDescriptorConverter.java,MEDIUM
106,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setImmutable(boolean)>",InfoToDescriptorConverter.java,MEDIUM
107,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setMultivalued(boolean)>",InfoToDescriptorConverter.java,MEDIUM
108,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setMultivalued(boolean)>",InfoToDescriptorConverter.java,MEDIUM
109,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setRequired(boolean)>",InfoToDescriptorConverter.java,MEDIUM
110,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getFieldType()>",InfoToDescriptorConverter.java,MEDIUM
111,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getFieldType()>",InfoToDescriptorConverter.java,MEDIUM
112,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getFieldType()>",InfoToDescriptorConverter.java,MEDIUM
113,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",InfoToDescriptorConverter.java,MEDIUM
114,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> has parameter of type <org.exolab.castor.mapping.loader.ClassDescriptorImpl>",InfoToDescriptorConverter.java,MEDIUM
115,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.convert(org.exolab.castor.mapping.loader.ClassDescriptorImpl, org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.xml.ClassDescriptorResolver)> has return type <org.exolab.castor.mapping.loader.FieldDescriptorImpl>",InfoToDescriptorConverter.java,MEDIUM
116,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.createFMSQL(java.lang.String, org.castor.jdo.jpa.natures.JPAFieldNature, org.exolab.castor.mapping.ClassDescriptor, int, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> has parameter of type <org.exolab.castor.mapping.loader.ClassDescriptorImpl>",InfoToDescriptorConverter.java,MEDIUM
117,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.createFieldHandler(org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.mapping.loader.TypeInfo)> calls constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)>",InfoToDescriptorConverter.java,MEDIUM
118,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.createFieldHandler(org.castor.jdo.jpa.info.FieldInfo, org.exolab.castor.mapping.loader.TypeInfo)> has parameter of type <org.exolab.castor.mapping.loader.TypeInfo>",InfoToDescriptorConverter.java,MEDIUM
119,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.createManyKey(java.lang.String, org.castor.jdo.jpa.natures.JPAFieldNature, org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentity()>",InfoToDescriptorConverter.java,MEDIUM
120,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.createManyKey(java.lang.String, org.castor.jdo.jpa.natures.JPAFieldNature, org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.mapping.loader.ClassDescriptorImpl)> has parameter of type <org.exolab.castor.mapping.loader.ClassDescriptorImpl>",InfoToDescriptorConverter.java,MEDIUM
121,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.createTypeInfo(org.castor.jdo.jpa.info.FieldInfo, org.castor.jdo.jpa.natures.JPAFieldNature)> calls constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class)>",InfoToDescriptorConverter.java,MEDIUM
122,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.createTypeInfo(org.castor.jdo.jpa.info.FieldInfo, org.castor.jdo.jpa.natures.JPAFieldNature)> calls constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class)>",InfoToDescriptorConverter.java,MEDIUM
123,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.jdo.jpa.info.InfoToDescriptorConverter.createTypeInfo(org.castor.jdo.jpa.info.FieldInfo, org.castor.jdo.jpa.natures.JPAFieldNature)> has return type <org.exolab.castor.mapping.loader.TypeInfo>",InfoToDescriptorConverter.java,MEDIUM
124,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.mapping.MappingUnmarshaller.getMappingLoader(org.exolab.castor.mapping.Mapping, org.castor.mapping.BindingType, java.lang.Object)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.loadMapping(org.exolab.castor.mapping.xml.MappingRoot, java.lang.Object)>",MappingUnmarshaller.java,MEDIUM
125,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.mapping.MappingUnmarshaller.getMappingLoader(org.exolab.castor.mapping.Mapping, org.castor.mapping.BindingType, java.lang.Object)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.setAllowRedefinitions(boolean)>",MappingUnmarshaller.java,MEDIUM
126,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.mapping.MappingUnmarshaller.getMappingLoader(org.exolab.castor.mapping.Mapping, org.castor.mapping.BindingType, java.lang.Object)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.setClassLoader(java.lang.ClassLoader)>",MappingUnmarshaller.java,MEDIUM
127,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.castor.mapping.MappingUnmarshaller.getMappingLoader(org.exolab.castor.mapping.Mapping, org.castor.mapping.BindingType, java.lang.Object)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.setInternalContext(org.castor.xml.InternalContext)>",MappingUnmarshaller.java,MEDIUM
128,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls constructor <org.exolab.castor.mapping.loader.ClassDescriptorImpl.<init>()>",JDOMappingLoader.java,MEDIUM
129,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.addNature(java.lang.String)>",JDOMappingLoader.java,MEDIUM
130,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",JDOMappingLoader.java,MEDIUM
131,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setDepends(org.exolab.castor.mapping.ClassDescriptor)>",JDOMappingLoader.java,MEDIUM
132,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setExtends(org.exolab.castor.mapping.ClassDescriptor)>",JDOMappingLoader.java,MEDIUM
133,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setFields([Lorg.exolab.castor.mapping.FieldDescriptor;)>",JDOMappingLoader.java,MEDIUM
134,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setIdentities([Lorg.exolab.castor.mapping.FieldDescriptor;)>",JDOMappingLoader.java,MEDIUM
135,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setJavaClass(java.lang.Class)>",JDOMappingLoader.java,MEDIUM
136,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.setMapping(org.exolab.castor.mapping.xml.ClassMapping)>",JDOMappingLoader.java,MEDIUM
137,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.isIdentity()>",JDOMappingLoader.java,MEDIUM
138,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setContainingClassDescriptor(org.exolab.castor.mapping.ClassDescriptor)>",JDOMappingLoader.java,MEDIUM
139,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.Types.isConstructable(java.lang.Class, boolean)>",JDOMappingLoader.java,MEDIUM
140,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls constructor <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.<init>(org.exolab.castor.mapping.loader.AbstractMappingLoader)>",JDOMappingLoader.java,MEDIUM
141,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>(java.lang.String, org.exolab.castor.mapping.loader.TypeInfo, org.exolab.castor.mapping.FieldHandler, boolean)>",JDOMappingLoader.java,MEDIUM
142,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)>",JDOMappingLoader.java,MEDIUM
143,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)>",JDOMappingLoader.java,MEDIUM
144,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionType(java.lang.String)>",JDOMappingLoader.java,MEDIUM
145,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",JDOMappingLoader.java,MEDIUM
146,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.addNature(java.lang.String)>",JDOMappingLoader.java,MEDIUM
147,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setRequired(boolean)>",JDOMappingLoader.java,MEDIUM
148,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setTransient(boolean)>",JDOMappingLoader.java,MEDIUM
149,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.FieldHandlerFriend.setFieldDescriptor(org.exolab.castor.mapping.FieldDescriptor)>",JDOMappingLoader.java,MEDIUM
150,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getCollectionHandler()>",JDOMappingLoader.java,MEDIUM
151,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getConvertorFrom()>",JDOMappingLoader.java,MEDIUM
152,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getFieldType()>",JDOMappingLoader.java,MEDIUM
153,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.TypeInfo.setCollectionHandler(org.exolab.castor.mapping.CollectionHandler)>",JDOMappingLoader.java,MEDIUM
154,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.TypeInfo.setCollectionHandler(org.exolab.castor.mapping.CollectionHandler)>",JDOMappingLoader.java,MEDIUM
155,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> gets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",JDOMappingLoader.java,MEDIUM
156,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> has return type <org.exolab.castor.mapping.loader.FieldDescriptorImpl>",JDOMappingLoader.java,MEDIUM
157,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> sets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",JDOMappingLoader.java,MEDIUM
158,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> calls constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class, org.exolab.castor.mapping.TypeConvertor, org.exolab.castor.mapping.TypeConvertor, boolean, java.lang.Object, org.exolab.castor.mapping.CollectionHandler)>",JDOMappingLoader.java,MEDIUM
159,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.Types.addConvertibleType(java.lang.Class)>",JDOMappingLoader.java,MEDIUM
160,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.Types.addEnumType(java.lang.Class)>",JDOMappingLoader.java,MEDIUM
161,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",JDOMappingLoader.java,MEDIUM
162,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> has return type <org.exolab.castor.mapping.loader.TypeInfo>",JDOMappingLoader.java,MEDIUM
163,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.resolveRelations(org.exolab.castor.mapping.ClassDescriptor)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setClassDescriptor(org.exolab.castor.mapping.ClassDescriptor)>",JDOMappingLoader.java,MEDIUM
164,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.resolveRelations(org.exolab.castor.mapping.ClassDescriptor)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setClassDescriptor(org.exolab.castor.mapping.ClassDescriptor)>",JDOMappingLoader.java,MEDIUM
165,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.JDOMappingLoader.resolveRelations(org.exolab.castor.mapping.ClassDescriptor)> checks instanceof <org.exolab.castor.mapping.loader.FieldDescriptorImpl>",JDOMappingLoader.java,MEDIUM
166,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.SQLHelper.calculateNumberOfFields(java.util.Collection, int, int, int, java.sql.ResultSet)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",SQLHelper.java,MEDIUM
167,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.SQLHelper.getIdentitySQLNames(org.exolab.castor.mapping.ClassDescriptor)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",SQLHelper.java,MEDIUM
168,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.engine.nature.ClassDescriptorJDONature.getField(java.lang.String)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",ClassDescriptorJDONature.java,MEDIUM
169,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.oql.ParseTreeWalker.checkProjection(org.exolab.castor.jdo.oql.ParseTreeNode, boolean, boolean)> calls method <org.exolab.castor.mapping.loader.Types.isSimpleType(java.lang.Class)>",ParseTreeWalker.java,MEDIUM
170,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.jdo.oql.ParseTreeWalker.getParamTypeForList(org.exolab.castor.jdo.oql.ParseTreeNode)> calls method <org.exolab.castor.mapping.loader.Types.typeFromName(java.lang.ClassLoader, java.lang.String)>",ParseTreeWalker.java,MEDIUM
171,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.GeneralizedFieldHandler.getValue(java.lang.Object)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",GeneralizedFieldHandler.java,MEDIUM
172,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.GeneralizedFieldHandler.getValue(java.lang.Object)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.hasHandler(java.lang.Class)>",GeneralizedFieldHandler.java,MEDIUM
173,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls constructor <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.<init>(org.exolab.castor.mapping.loader.AbstractMappingLoader)>",AbstractMappingLoader.java,MEDIUM
174,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls constructor <org.exolab.castor.mapping.loader.FieldDescriptorImpl.<init>(java.lang.String, org.exolab.castor.mapping.loader.TypeInfo, org.exolab.castor.mapping.FieldHandler, boolean)>",AbstractMappingLoader.java,MEDIUM
175,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(org.exolab.castor.mapping.FieldHandler, org.exolab.castor.mapping.loader.TypeInfo)>",AbstractMappingLoader.java,MEDIUM
176,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionType(java.lang.String)>",AbstractMappingLoader.java,MEDIUM
177,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
178,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setRequired(boolean)>",AbstractMappingLoader.java,MEDIUM
179,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.FieldHandlerFriend.setFieldDescriptor(org.exolab.castor.mapping.FieldDescriptor)>",AbstractMappingLoader.java,MEDIUM
180,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.TypeInfo.getCollectionHandler()>",AbstractMappingLoader.java,MEDIUM
181,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.TypeInfo.setCollectionHandler(org.exolab.castor.mapping.CollectionHandler)>",AbstractMappingLoader.java,MEDIUM
182,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.TypeInfo.setCollectionHandler(org.exolab.castor.mapping.CollectionHandler)>",AbstractMappingLoader.java,MEDIUM
183,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.TypeInfo.setImmutable(boolean)>",AbstractMappingLoader.java,MEDIUM
184,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> gets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",AbstractMappingLoader.java,MEDIUM
185,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> has return type <org.exolab.castor.mapping.loader.FieldDescriptorImpl>",AbstractMappingLoader.java,MEDIUM
186,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> sets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",AbstractMappingLoader.java,MEDIUM
187,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDescriptors(org.exolab.castor.mapping.xml.ClassMapping, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setIdentity(boolean)>",AbstractMappingLoader.java,MEDIUM
188,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDescriptors(org.exolab.castor.mapping.xml.ClassMapping, java.lang.Class)> depends on component type <org.exolab.castor.mapping.loader.FieldDescriptorImpl>",AbstractMappingLoader.java,MEDIUM
189,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDescriptors(org.exolab.castor.mapping.xml.ClassMapping, java.lang.Class)> has return type <[Lorg.exolab.castor.mapping.loader.FieldDescriptorImpl;>",AbstractMappingLoader.java,MEDIUM
190,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)>",AbstractMappingLoader.java,MEDIUM
191,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)>",AbstractMappingLoader.java,MEDIUM
192,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)>",AbstractMappingLoader.java,MEDIUM
193,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionType(java.lang.String)>",AbstractMappingLoader.java,MEDIUM
194,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
195,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.isGetSetCollection(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
196,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setAddMethod(java.lang.reflect.Method)>",AbstractMappingLoader.java,MEDIUM
197,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setAddMethod(java.lang.reflect.Method)>",AbstractMappingLoader.java,MEDIUM
198,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setCreateMethod(java.lang.reflect.Method)>",AbstractMappingLoader.java,MEDIUM
199,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setCreateMethod(java.lang.reflect.Method)>",AbstractMappingLoader.java,MEDIUM
200,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setHasDeleteMethod(java.lang.reflect.Method, java.lang.reflect.Method)>",AbstractMappingLoader.java,MEDIUM
201,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> calls method <org.exolab.castor.mapping.loader.Types.isSimpleType(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
202,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> gets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",AbstractMappingLoader.java,MEDIUM
203,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> gets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",AbstractMappingLoader.java,MEDIUM
204,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> gets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",AbstractMappingLoader.java,MEDIUM
205,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> has parameter of type <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference>",AbstractMappingLoader.java,MEDIUM
206,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> sets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",AbstractMappingLoader.java,MEDIUM
207,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> sets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",AbstractMappingLoader.java,MEDIUM
208,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldHandler(java.lang.Class, java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping, org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference)> sets field <org.exolab.castor.mapping.loader.AbstractMappingLoader$TypeInfoReference.typeInfo>",AbstractMappingLoader.java,MEDIUM
209,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.divideFieldDescriptors([Lorg.exolab.castor.mapping.FieldDescriptor;, [Ljava.lang.String;, [Lorg.exolab.castor.mapping.FieldDescriptor;)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.setRequired(boolean)>",AbstractMappingLoader.java,MEDIUM
210,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.divideFieldDescriptors([Lorg.exolab.castor.mapping.FieldDescriptor;, [Ljava.lang.String;, [Lorg.exolab.castor.mapping.FieldDescriptor;)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setRequired(boolean)>",AbstractMappingLoader.java,MEDIUM
211,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.divideFieldDescriptors([Lorg.exolab.castor.mapping.FieldDescriptor;, [Ljava.lang.String;, [Lorg.exolab.castor.mapping.FieldDescriptor;)> checks instanceof <org.exolab.castor.mapping.loader.FieldDescriptorImpl>",AbstractMappingLoader.java,MEDIUM
212,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.divideFieldDescriptors([Lorg.exolab.castor.mapping.FieldDescriptor;, [Ljava.lang.String;, [Lorg.exolab.castor.mapping.FieldDescriptor;)> checks instanceof <org.exolab.castor.mapping.loader.FieldHandlerImpl>",AbstractMappingLoader.java,MEDIUM
213,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
214,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
215,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
216,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
217,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
218,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findField(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
219,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findField(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
220,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findField(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
221,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> calls constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class, org.exolab.castor.mapping.TypeConvertor, org.exolab.castor.mapping.TypeConvertor, boolean, java.lang.Object, org.exolab.castor.mapping.CollectionHandler, boolean)>",AbstractMappingLoader.java,MEDIUM
222,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",AbstractMappingLoader.java,MEDIUM
223,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> has return type <org.exolab.castor.mapping.loader.TypeInfo>",AbstractMappingLoader.java,MEDIUM
224,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.AbstractMappingLoader.resolveType(java.lang.String)> calls method <org.exolab.castor.mapping.loader.Types.typeFromName(java.lang.ClassLoader, java.lang.String)>",AbstractMappingLoader.java,MEDIUM
225,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionName(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.javaClass>",CollectionHandlers.java,MEDIUM
226,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionName(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.javaClass>",CollectionHandlers.java,MEDIUM
227,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionName(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.shortName>",CollectionHandlers.java,MEDIUM
228,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionName(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.shortName>",CollectionHandlers.java,MEDIUM
229,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionType(java.lang.String)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.javaClass>",CollectionHandlers.java,MEDIUM
230,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionType(java.lang.String)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.javaClass>",CollectionHandlers.java,MEDIUM
231,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionType(java.lang.String)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.shortName>",CollectionHandlers.java,MEDIUM
232,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.handler>",CollectionHandlers.java,MEDIUM
233,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.handler>",CollectionHandlers.java,MEDIUM
234,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.javaClass>",CollectionHandlers.java,MEDIUM
235,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.javaClass>",CollectionHandlers.java,MEDIUM
236,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.hasHandler(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.javaClass>",CollectionHandlers.java,MEDIUM
237,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.isGetSetCollection(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.getSetCollection>",CollectionHandlers.java,MEDIUM
238,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.CollectionHandlers.isGetSetCollection(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.CollectionHandlers$Info.javaClass>",CollectionHandlers.java,MEDIUM
239,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.FieldHandlerImpl.getValue(java.lang.Object)> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$EmptyEnumerator.<init>()>",FieldHandlerImpl.java,MEDIUM
240,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.FieldHandlerImpl.newInstance(java.lang.Object, [Ljava.lang.Object;)> calls method <org.exolab.castor.mapping.loader.Types.newInstance(java.lang.Class, [Ljava.lang.Object;)>",FieldHandlerImpl.java,MEDIUM
241,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setValue(java.lang.Object, java.lang.Object)> calls method <org.exolab.castor.mapping.loader.Types.newInstance(java.lang.Class)>",FieldHandlerImpl.java,MEDIUM
242,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.J1CollectionHandlers.getCollectionHandlersInfo()> depends on component type <org.exolab.castor.mapping.loader.CollectionHandlers$Info>",J1CollectionHandlers.java,MEDIUM
243,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.J1CollectionHandlers.getCollectionHandlersInfo()> has return type <[Lorg.exolab.castor.mapping.loader.CollectionHandlers$Info;>",J1CollectionHandlers.java,MEDIUM
244,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.J2CollectionHandlers.getCollectionHandlersInfo()> depends on component type <org.exolab.castor.mapping.loader.CollectionHandlers$Info>",J2CollectionHandlers.java,MEDIUM
245,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.J2CollectionHandlers.getCollectionHandlersInfo()> has return type <[Lorg.exolab.castor.mapping.loader.CollectionHandlers$Info;>",J2CollectionHandlers.java,MEDIUM
246,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.getDefault(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._defaultValue>",Types.java,MEDIUM
247,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.getDefault(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._javaType>",Types.java,MEDIUM
248,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.getDefault(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._primitive>",Types.java,MEDIUM
249,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.isImmutable(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._immutable>",Types.java,MEDIUM
250,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.isImmutable(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._javaType>",Types.java,MEDIUM
251,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.isImmutable(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._primitive>",Types.java,MEDIUM
252,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.isPrimitiveType(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._javaType>",Types.java,MEDIUM
253,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.isPrimitiveType(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._primitive>",Types.java,MEDIUM
254,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.isPrimitiveType(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._primitive>",Types.java,MEDIUM
255,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.isSimpleType(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._javaType>",Types.java,MEDIUM
256,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.isSimpleType(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._primitive>",Types.java,MEDIUM
257,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.typeFromName(java.lang.ClassLoader, java.lang.String)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._javaType>",Types.java,MEDIUM
258,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.typeFromName(java.lang.ClassLoader, java.lang.String)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._primitive>",Types.java,MEDIUM
259,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.typeFromName(java.lang.ClassLoader, java.lang.String)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._primitive>",Types.java,MEDIUM
260,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.typeFromName(java.lang.ClassLoader, java.lang.String)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._shortName>",Types.java,MEDIUM
261,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._javaType>",Types.java,MEDIUM
262,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)> gets field <org.exolab.castor.mapping.loader.Types$TypeInfo._primitive>",Types.java,MEDIUM
263,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.ClassMolderHelper.getFullFields(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.getIdentityColumnNames([Ljava.lang.String;, org.exolab.castor.mapping.xml.ClassMapping)>",ClassMolderHelper.java,MEDIUM
264,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.ClassMolderHelper.getFullFields(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.getIdentityColumnNames([Ljava.lang.String;, org.exolab.castor.mapping.xml.ClassMapping)>",ClassMolderHelper.java,MEDIUM
265,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.ClassMolderHelper.getIdFields(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.getIdentityColumnNames([Ljava.lang.String;, org.exolab.castor.mapping.xml.ClassMapping)>",ClassMolderHelper.java,MEDIUM
266,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.DatingService.pairFieldClass(org.exolab.castor.persist.FieldMolder, java.lang.String)> calls method <org.exolab.castor.mapping.loader.Types.isConvertibleType(java.lang.Class)>",DatingService.java,MEDIUM
267,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.DatingService.pairFieldClass(org.exolab.castor.persist.FieldMolder, java.lang.String)> calls method <org.exolab.castor.mapping.loader.Types.isEnumType(java.lang.Class)>",DatingService.java,MEDIUM
268,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.DatingService.pairFieldClass(org.exolab.castor.persist.FieldMolder, java.lang.String)> calls method <org.exolab.castor.mapping.loader.Types.isSimpleType(java.lang.Class)>",DatingService.java,MEDIUM
269,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.DatingService.resolve(java.lang.String)> calls method <org.exolab.castor.mapping.loader.Types.typeFromName(java.lang.ClassLoader, java.lang.String)>",DatingService.java,MEDIUM
270,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.FieldMolder.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldMolder.java,MEDIUM
271,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.FieldMolder.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldMolder.java,MEDIUM
272,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.FieldMolder.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldMolder.java,MEDIUM
273,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.FieldMolder.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldMolder.java,MEDIUM
274,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.FieldMolder.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldMolder.java,MEDIUM
275,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.FieldMolder.findField(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldMolder.java,MEDIUM
276,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.FieldMolder.findField(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldMolder.java,MEDIUM
277,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.FieldMolder.findField(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.Types.typeFromPrimitive(java.lang.Class)>",FieldMolder.java,MEDIUM
278,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.persist.FieldMolder.setValue(java.lang.Object, java.lang.Object, java.lang.ClassLoader)> calls method <org.exolab.castor.mapping.loader.Types.newInstance(java.lang.Class)>",FieldMolder.java,MEDIUM
279,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.tools.MappingTool.addClass(java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionName(java.lang.Class)>",MappingTool.java,MEDIUM
280,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.tools.MappingTool.addClass(java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.isConstructable(java.lang.Class)>",MappingTool.java,MEDIUM
281,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.tools.MappingTool.addClass(java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.isSimpleType(java.lang.Class)>",MappingTool.java,MEDIUM
282,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.tools.MappingTool.addClass(java.lang.Class, boolean)> calls method <org.exolab.castor.mapping.loader.Types.isSimpleType(java.lang.Class)>",MappingTool.java,MEDIUM
283,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.tools.MappingToolMappingLoader.canFindAccessors(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)>",MappingToolMappingLoader.java,MEDIUM
284,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.tools.MappingToolMappingLoader.canFindAccessors(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)>",MappingToolMappingLoader.java,MEDIUM
285,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.tools.MappingToolMappingLoader.canFindAccessors(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)>",MappingToolMappingLoader.java,MEDIUM
286,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.tools.MappingToolMappingLoader.returnsArray(java.lang.Class, java.lang.String, java.lang.Class)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.findAccessor(java.lang.Class, java.lang.String, java.lang.Class, boolean)>",MappingToolMappingLoader.java,MEDIUM
287,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.String, [Ljava.lang.reflect.Method;, [Ljava.lang.reflect.Method;, java.lang.reflect.Method, java.lang.reflect.Method, org.exolab.castor.mapping.loader.TypeInfo)>",Introspector.java,MEDIUM
288,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls constructor <org.exolab.castor.mapping.loader.FieldHandlerImpl.<init>(java.lang.reflect.Field, org.exolab.castor.mapping.loader.TypeInfo)>",Introspector.java,MEDIUM
289,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class, org.exolab.castor.mapping.TypeConvertor, org.exolab.castor.mapping.TypeConvertor, boolean, java.lang.Object, org.exolab.castor.mapping.CollectionHandler)>",Introspector.java,MEDIUM
290,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class, org.exolab.castor.mapping.TypeConvertor, org.exolab.castor.mapping.TypeConvertor, boolean, java.lang.Object, org.exolab.castor.mapping.CollectionHandler)>",Introspector.java,MEDIUM
291,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",Introspector.java,MEDIUM
292,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",Introspector.java,MEDIUM
293,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setAddMethod(java.lang.reflect.Method)>",Introspector.java,MEDIUM
294,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setConvertFrom(org.exolab.castor.mapping.TypeConvertor)>",Introspector.java,MEDIUM
295,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setConvertFrom(org.exolab.castor.mapping.TypeConvertor)>",Introspector.java,MEDIUM
296,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Introspector.generateClassDescriptor(java.lang.Class, java.io.PrintWriter)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setCreateMethod(java.lang.reflect.Method)>",Introspector.java,MEDIUM
297,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Marshaller.processAttribute(java.lang.Object, org.exolab.castor.xml.XMLFieldDescriptor, org.xml.sax.helpers.AttributesImpl)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",Marshaller.java,MEDIUM
298,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.Marshaller.processXSListType(java.lang.Object, org.exolab.castor.xml.XMLFieldDescriptor)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getHandler(java.lang.Class)>",Marshaller.java,MEDIUM
299,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.UnmarshalHandler.startElement(java.lang.String, java.lang.String, org.exolab.castor.xml.AttributeSet)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.isCollection()>",UnmarshalHandler.java,MEDIUM
300,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.UnmarshalHandler.startElement(java.lang.String, java.lang.String, org.exolab.castor.xml.AttributeSet)> checks instanceof <org.exolab.castor.mapping.loader.FieldHandlerImpl>",UnmarshalHandler.java,MEDIUM
301,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.FieldDescriptorImpl.isIdentity()>",XMLMappingLoader.java,MEDIUM
302,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.createClassDescriptor(org.exolab.castor.mapping.xml.ClassMapping)> calls method <org.exolab.castor.mapping.loader.Types.isConstructable(java.lang.Class, boolean)>",XMLMappingLoader.java,MEDIUM
303,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.AbstractMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)>",XMLMappingLoader.java,MEDIUM
304,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.getCollectionName(java.lang.Class)>",XMLMappingLoader.java,MEDIUM
305,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.CollectionHandlers.hasHandler(java.lang.Class)>",XMLMappingLoader.java,MEDIUM
306,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> calls method <org.exolab.castor.mapping.loader.FieldHandlerImpl.setConvertFrom(org.exolab.castor.mapping.TypeConvertor)>",XMLMappingLoader.java,MEDIUM
307,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> checks instanceof <org.exolab.castor.mapping.loader.FieldHandlerImpl>",XMLMappingLoader.java,MEDIUM
308,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.createFieldDesc(java.lang.Class, org.exolab.castor.mapping.xml.FieldMapping)> has return type <org.exolab.castor.mapping.loader.FieldDescriptorImpl>",XMLMappingLoader.java,MEDIUM
309,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> calls constructor <org.exolab.castor.mapping.loader.TypeInfo.<init>(java.lang.Class, org.exolab.castor.mapping.TypeConvertor, org.exolab.castor.mapping.TypeConvertor, boolean, java.lang.Object, org.exolab.castor.mapping.CollectionHandler, boolean)>",XMLMappingLoader.java,MEDIUM
310,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.XMLMappingLoader.getTypeInfo(java.lang.Class, org.exolab.castor.mapping.CollectionHandler, org.exolab.castor.mapping.xml.FieldMapping)> has return type <org.exolab.castor.mapping.loader.TypeInfo>",XMLMappingLoader.java,MEDIUM
311,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.util.XMLClassDescriptorAdapter.process(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.xml.NodeType)> calls method <org.exolab.castor.mapping.loader.ClassDescriptorImpl.getIdentities()>",XMLClassDescriptorAdapter.java,MEDIUM
312,no classes that are public should depend on classes that reside in a package '..loader..',"Method <org.exolab.castor.xml.util.XMLClassDescriptorAdapter.process(org.exolab.castor.mapping.ClassDescriptor, org.exolab.castor.xml.NodeType)> checks instanceof <org.exolab.castor.mapping.loader.ClassDescriptorImpl>",XMLClassDescriptorAdapter.java,MEDIUM
313,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J1CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J1CollectionHandlers.java,MEDIUM
314,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J1CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J1CollectionHandlers.java,MEDIUM
315,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J1CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J1CollectionHandlers.java,MEDIUM
316,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J1CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J1CollectionHandlers.java,MEDIUM
317,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J1CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J1CollectionHandlers$1.<init>()>",J1CollectionHandlers.java,MEDIUM
318,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J1CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J1CollectionHandlers$2.<init>()>",J1CollectionHandlers.java,MEDIUM
319,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J1CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J1CollectionHandlers$3.<init>()>",J1CollectionHandlers.java,MEDIUM
320,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J1CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J1CollectionHandlers$4.<init>()>",J1CollectionHandlers.java,MEDIUM
321,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J2CollectionHandlers.java,MEDIUM
322,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J2CollectionHandlers.java,MEDIUM
323,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J2CollectionHandlers.java,MEDIUM
324,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J2CollectionHandlers.java,MEDIUM
325,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J2CollectionHandlers.java,MEDIUM
326,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J2CollectionHandlers.java,MEDIUM
327,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J2CollectionHandlers.java,MEDIUM
328,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.CollectionHandlers$Info.<init>(java.lang.String, java.lang.Class, boolean, org.exolab.castor.mapping.CollectionHandler)>",J2CollectionHandlers.java,MEDIUM
329,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J2CollectionHandlers$1.<init>()>",J2CollectionHandlers.java,MEDIUM
330,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J2CollectionHandlers$2.<init>()>",J2CollectionHandlers.java,MEDIUM
331,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J2CollectionHandlers$3.<init>()>",J2CollectionHandlers.java,MEDIUM
332,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J2CollectionHandlers$4.<init>()>",J2CollectionHandlers.java,MEDIUM
333,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J2CollectionHandlers$5.<init>()>",J2CollectionHandlers.java,MEDIUM
334,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J2CollectionHandlers$6.<init>()>",J2CollectionHandlers.java,MEDIUM
335,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J2CollectionHandlers$SortedMapCollectionHandler.<init>(org.exolab.castor.mapping.loader.J2CollectionHandlers$1)>",J2CollectionHandlers.java,MEDIUM
336,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.J2CollectionHandlers.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.J2CollectionHandlers$SortedSetCollectionHandler.<init>(org.exolab.castor.mapping.loader.J2CollectionHandlers$1)>",J2CollectionHandlers.java,MEDIUM
337,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
338,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
339,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
340,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
341,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
342,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
343,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
344,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
345,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
346,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
347,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
348,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
349,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
350,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
351,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
352,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
353,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
354,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
355,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
356,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
357,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
358,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
359,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
360,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
361,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
362,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
363,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
364,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
365,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
366,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
367,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
368,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
369,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
370,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
371,no classes that are public should depend on classes that reside in a package '..loader..',"Static Initializer <org.exolab.castor.mapping.loader.Types.<clinit>()> calls constructor <org.exolab.castor.mapping.loader.Types$TypeInfo.<init>(java.lang.String, java.lang.Class, java.lang.Class, boolean, java.lang.Object)>",Types.java,MEDIUM
