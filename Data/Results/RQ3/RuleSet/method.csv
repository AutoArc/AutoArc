"methods().that().arePublic().should().notBeDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Public methods should not be declared in classes in package 'packageIdentifier1'."""
"methods().that().arePrivate().should().beDeclaredInClassesThat().areDeclaredInClassesThat().implement(""typeName1"")","""Private methods should be declared in classes implementing 'typeName1'."""
"methods().that().areProtected().should().beDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Protected methods should be declared in classes in package 'packageIdentifier1'."""
"methods().that().haveModifier(JavaModifier.FINAL).should().notBeDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Final methods should not be declared in classes in package 'packageIdentifier1'."""
"methods().that().arePackagePrivate().should().beDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Package-private methods should be declared in classes in package 'packageIdentifier1'."""
"methods().that().arePublic().and().haveNameMatching(""get"").should().beDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Public methods with names matching with 'get' should be declared in classes in package 'packageIdentifier1'."""
"methods().that().arePrivate().and().haveModifier(JavaModifier.FINAL).should().notBeDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Private final methods should not be declared in classes in package 'packageIdentifier1'."""
"methods().that().arePublic().and().haveModifier(JavaModifier.STATIC).and().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier2"").should().notBeDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Public static methods in package 'packageIdentifier2' should not be declared in classes in package 'packageIdentifier1'."""
"methods().that().arePublic().and().haveModifier(JavaModifier.STATIC).and().haveNameMatching(""X1"").should().beDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Public static methods with names matching with 'X1' should be declared in classes in package 'packageIdentifier1'."""
"methods().that().areProtected().and().haveModifier(JavaModifier.FINAL).and().haveNameMatching(""X1"").should().beDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Protected final methods with names matching with 'X1' should be declared in classes in package 'packageIdentifier1'."""
methods().that().arePublic().should().beDeclaredInClassesThat().arePublic(),"""Public methods should be declared in public classes."""
methods().that().arePrivate().should().beDeclaredInClassesThat().arePrivate(),"""Private methods should be declared in private classes."""
methods().that().areProtected().should().beDeclaredInClassesThat().areProtected(),"""Protected methods should be declared in protected classes."""
methods().that().haveModifier(JavaModifier.FINAL).should().notBeDeclaredInClassesThat().areFinal(),"""Final methods should not be declared in final classes."""
methods().that().arePackagePrivate().should().beDeclaredInClassesThat().arePackagePrivate(),"""Package-private methods should be declared in package-private classes."""
"methods().that().arePublic().and().haveNameMatching(""get"").should().beDeclaredInClassesThat().areFinal()","""Public methods with names matching 'get' should be declared in final classes."""
methods().that().arePrivate().and().haveModifier(JavaModifier.FINAL).should().beDeclaredInClassesThat().arePackagePrivate(),"""Private final methods should be declared in package-private classes."""
"methods().that().arePublic().and().haveModifier(JavaModifier.STATIC).and().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier"").should().notBeDeclaredInClassesThat().arePublic().andShould().notBeDeclaredInClassesThat().areStatic()","""Public static methods in package 'packageIdentifier' should not be declared in public static classes."""
"methods().that().arePublic().and().haveModifier(JavaModifier.STATIC).and().haveNameMatching(""regex"").should().beDeclaredInClassesThat().arePublic().andShould().beDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Public static methods with names matching with 'regex' should be declared in public classes in package 'packageIdentifier1'."""
"methods().that().areProtected().and().haveModifier(JavaModifier.FINAL).and().haveNameMatching(""X1"").should().beDeclaredInClassesThat().areStatic().andShould().beDeclaredInClassesThat().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"")","""Protected final methods with names matching with 'X1' should be declared in static classes in package 'packageIdentifier1'."""
"methods().that().arePublic().should().beAnnotatedWith(""specified annotation"")","""Public methods should be annotated with the specified annotation."""
Trains Failed,"""Private methods should be declared in the specified class."""
"methods().that().areProtected().should().haveRawParameterTypes(""typeName"")","""Protected methods should have parameter types of 'typeName'."""
"methods().that().haveModifier(JavaModifier.FINAL).should().haveFullNameMatching(""String"")","""Final methods should have full names matching 'String'."""
"methods().that().arePackagePrivate().should().haveNameEndingWith(""String"")","""Package-private methods should have names ending with 'String'."""
"methods().that().arePublic().and().haveNameMatching(""get"").should().haveNameMatching(""String"")","""Public methods with names starting with 'get' should have names starting with 'String'."""
"methods().that().arePrivate().and().haveModifier(JavaModifier.FINAL).should().haveRawReturnType(""returnType"")","""Private final methods should have raw return types of 'returnType'."""
"methods().that().arePublic().and().haveModifier(JavaModifier.STATIC).and().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier2"").should().haveRawParameterTypes(""ParameterType"")","""Public static methods in package 'packageIdentifier2' should have raw parameter types of 'ParameterType'."""
"methods().that().arePublic().and().haveModifier(JavaModifier.STATIC).and().haveNameMatching(""String1"").should().haveFullName(""String2"")","""Public static methods with names matching with 'String1' should have full names of 'String2'."""
"methods().that().areProtected().and().haveModifier(JavaModifier.FINAL).and().haveNameMatching(""String1"").should().haveNameContaining(""String2"")","""Protected final methods with names matching with 'String1' should have names containing 'String2'."""
methods().that().haveModifier(JavaModifier.STATIC).should().bePublic(),"""Static methods should be public."""
methods().that().haveModifier(JavaModifier.FINAL).should().beStatic(),"""Final methods should be static."""
methods().that().arePrivate().should().beProtected(),"""Private methods should be protected."""
"methods().that().arePublic().and().areDeclaredInClassesThat().resideInAPackage(""X1"").should().bePackagePrivate()","""Public methods in package 'packageIdentifier' should be package-private."""
"methods().that().haveNameMatching(""get"").should().bePublic()","""Methods with names matching with 'get' should be public."""
