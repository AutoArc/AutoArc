"codeUnits().that().arePublic().should().beDeclaredInClassesThat().resideInAPackage(""packageIdentifier"")","""Public code units should be declared in classes in package 'packageIdentifier'."""
"codeUnits().that().arePrivate().should().beDeclaredInClassesThat().implement(""packageIdentifier.typeName"")","""Private code units should be declared in classes implementing 'packageIdentifier.typeName'."""
"codeUnits().that().areProtected().should().beDeclaredInClassesThat().resideInAPackage(""packageIdentifier"")","""Protected code units should be declared in classes in package 'packageIdentifier'."""
"noCodeUnits().that().arePrivate().should().beDeclaredInClassesThat().resideInAPackage(""packageIdentifier"")","""Private code units should not be declared in classes in package 'packageIdentifier'."""
"codeUnits().that().arePackagePrivate().should().beDeclaredInClassesThat().resideInAPackage(""packageIdentifier"")","""Package-private code units should be declared in classes in package 'packageIdentifier'."""
"codeUnits().that().arePublic().and().haveNameMatching(""Regex"").should().beDeclaredInClassesThat().resideInAPackage(""packageIdentifier"")","""Public code units with names Matching with 'Regex' should be declared in classes in package 'packageIdentifier'."""
"noCodeUnits().that().arePrivate().should().beDeclaredInClassesThat().resideInAPackage(""packageIdentifier"")","""Private code units should not be declared in classes in package 'packageIdentifier'."""
"""codeUnits().that().arePublic().and().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier1"").should().beDeclaredInClassesThat().resideInAPackage(""packageIdentifier2"")""","""Public code units in package 'packageIdentifier1' should be declared in classes in package 'packageIdentifier2'."""
"codeUnits().that().haveNameMatching(\"".*regex.*\"").should().beDeclaredInClassesThat().implement(\""packageIdentifier.typeName\"")","""Code units with names matching with 'Regex' should be declared in classes implementing 'packageIdentifier.typeName'."""
"codeUnits().that().haveNameMatching(\"".*regex.*\"").should().beDeclaredInClassesThat().resideInAPackage(\""packageIdentifier\"")","""Code units with names matching with 'Regex' should be declared in classes in package 'packageIdentifier'."""
codeUnits().that().arePublic().should().beDeclaredInClassesThat().arePublic(),"""Public code units should be declared in public classes."""
codeUnits().that().arePrivate().should().beDeclaredInClassesThat().haveModifier(JavaModifier.STATIC),"""Private code units should be declared in static classes."""
codeUnits().that().areProtected().should().beDeclaredInClassesThat().areProtected(),"""Protected code units should be declared in protected classes."""
noCodeUnits().that().arePrivate().should().beDeclaredInClassesThat().arePackagePrivate(),"""Private code units should not be declared in package-private classes."""
codeUnits().that().arePackagePrivate().should().beDeclaredInClassesThat().areFinal(),"""Package-private code units should be declared in final classes."""
"codeUnits().that().arePublic().and().haveNameMatching(\"".*get.*\"").should().beDeclaredInClassesThat().arePrivate()","""Public code units with names matching with 'get' should be declared in private classes."""
"noCodeUnits().that().arePrivate().should().beDeclaredInClassesThat().resideInAPackage(\""packageIdentifier\"")","""Private code units should not be declared in classes in package 'packageIdentifier1'."""
"codeUnits().that().arePublic().and().areDeclaredInClassesThat()resideInAPackage(\""packageIdentifier1\"").should().beDeclaredInClassesThat().arePublic().andShould().beDeclaredInClassesThat().resideInAPackage(\""packageIdentifier2\"")","""Public code units in package 'packageIdentifier1' should be declared in public classes in package 'packageIdentifier2'."""
"codeUnits().that().haveNameMatching(\"".*regex.*\"").should().beDeclaredInClassesThat().arePublic().andShould().beDeclaredInClassesThat().implement(\""packageIdentifier.typeName\"")","""Code units with names matching with 'Regex' should be declared in public classes implementing 'packageIdentifier.typeName'."""
"codeUnits().that().haveNameMatching(\"".*regex.*\"").should().beDeclaredInClassesThat().haveModifier(JavaModifier.STATIC).andShould().beDeclaredInClassesThat().resideInAPackage(\""packageIdentifier\"")","""Code units with names matching with 'Regex' should be declared in static classes in package 'packageIdentifier'."""
"codeUnits().that().arePrivate().should().beAnnotatedWith(\""packageIdentifier.MyAnnotation\"")","""Private code units should be annotated with 'annotationpackageIdentifier.typeName'."""
"codeUnits().that().areProtected().should().haveFullNameMatching(""regex"")","""Protected code units should have full names matching the regex."""
codeUnits().that().areProtected().should().haveModifier(JavaModifier.STATIC),"""Private code units should have the modifier 'JavaModifier'."""
"codeUnits().that().arePackagePrivate().should().haveNameMatching(\"".*regex.*\"")","""Package-private code units should have names matching the regex."""
"codeUnits().that().arePublic().should().haveNameMatching(\"".*regex.*\"")","""Public code units should have names ending with the regex."""
"noCodeUnits().that().arePrivate().should().beDeclaredInClassesThat().resideInAPackage(\""packageIdentifier\"")","""Private code units should not be declared in classes in package 'packageIdentifier'."""
"codeUnits().that().arePublic().should().haveNameStartingWith(""regex"")","""Public code units should have names starting with the regex."""
"codeUnits().that().arePublic().should().haveRawReturnType(\""packageIdentifier.typeName\"")","""Public code units should have raw return types of 'packageIdentifier.typeName'."""
"codeUnits().that().arePrivate().should().haveRawParameterTypes(""packageIdentifier.typeName"")","""Private code units should have raw parameter types of 'packageIdentifier.typeName'."""
"codeUnits().that().arePrivate().should().declareThrowableOfType(""packageIdentifier.typeName"")","""Private code units should declare throwable types of 'packageIdentifier.typeName'."""
"codeUnits().that().haveModifier(JavaModifier.STATIC).and().areDeclaredInClassesThat().resideInAPackage(\""packageIdentifier\"").should().bePublic()","""Static code units in package 'packageIdentifier' should be public."""
"codeUnits().that().haveModifier(JavaModifier.FINAL).and().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier"").should().bePrivate()","""Final code units in package 'packageIdentifier' should be private."""
"codeUnits().that().arePrivate().and().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier"").should().beProtected()","""Private code units in package 'packageIdentifier' should be protected."""
"codeUnits().that().arePublic().and().areDeclaredInClassesThat().resideInAPackage(""packageIdentifier"").should().bePackagePrivate()","""Public code units in package 'packageIdentifier' should be package-private."""
"codeUnits().that().haveNameMatching(""regex"").should().bePublic()","""Code units with names Matching with 'regex' should be public."""
